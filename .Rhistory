dataset = read.csv("50_Startups.csv")
plot(dataset)
library(caret)
library(caTools)
library(dplyr)
NANumbers <- sum(is.na(dataset))
paste("**** The number of NA values in this data set =", NANumbers)
# Plotting percentage of missing values per feature
library(naniar)
gg_miss_var(dataset, show_pct = TRUE)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
dataset$State=as.integer(dataset$State)
# Display new data frame
head(dataset)
par(mfrow=c(1,1))
hist(dataset$R.D.Spend, col = "wheat",main = "Research and Development Spending",xlab = "R&D Spending")
hist(dataset$Administration, col = "skyblue",main = "Administration",xlab = "Administration Cost")
hist(dataset$Marketing.Spend, col = "green", main = "Marketing Spend",xlab = "Marketing Spending")
hist(dataset$State, col = "coral2",main = "State",xlab = "State")
boxplot(dataset$R.D.Spend,
ylab = "R.D.Spend")
boxplot(dataset$Administration,
ylab = "Administration Cost")
boxplot.stats(dataset$Administration)$out
boxplot(dataset$Marketing.Spend,
ylab = "Marketing Spending")
boxplot(dataset$State,
ylab = "State")
library(corrplot)
corrplot(cor(dataset), addCoef.col = 'black', method="color")
library(Metrics)
regressor = lm(formula = Profit ~ .,
data = training_set)
library(caret)
set.seed(123)
training.samples=dataset$Profit%>%
createDataPartition(p=.8, list =FALSE)
training_set=dataset[training.samples,]
test_set=dataset[-training.samples,]
library(Metrics)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
predy = predict(regressor, newdata = test_set)
mse <- mse(training_set$Profit,predy)
cat("MSE" , mse, "\n")
coef(regressor)
confint(regressor)
library(Metrics)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
predy = predict(regressor, newdata = test_set)
mse <- mse(training_set$Profit,predy)
cat("MSE" , mse, "\n")
coef(regressor)
confint(regressor)
#H0: Bi = 0, i =0,1,2,3,4
#Ha: Bi != 0
#Reject Ha fs F0 > F(0.05,4,37)
F_critical = qf(p=.05, df1=4, df=37, lower.tail=FALSE)
F_statistic = 177.1
F_critical < F_statistic
#Hence we reject H0, which means there are relationships between independent variables and dependent variables.
R2(predictions, test_set$Profit)
#H0: Bi = 0, i =0,1,2,3,4
#Ha: Bi != 0
#Reject Ha fs F0 > F(0.05,4,37)
F_critical = qf(p=.05, df1=4, df=37, lower.tail=FALSE)
F_statistic = 177.1
F_critical < F_statistic
#Hence we reject H0, which means there are relationships between independent variables and dependent variables.
x_train <- model.matrix(training_set$Profit~., data = training_set)[, -1]
y_train <- training_set$Profit
library(glmnet)
lasso_model <- glmnet(x_train, y_train, alpha = 1)
plot(lasso_model, "lambda")
plot(lasso_model, "norm")
set.seed(4)
grid <- 10^seq(2, -2, length = 100)
lasso_cv_model <- cv.glmnet(x_train, y_train, alpha = 1, lambda = grid)
plot(lasso_cv_model)
best_lambda <- lasso_cv_model$lambda.min
cat("Best Lambda: ", best_lambda, "\n")
coef(lasso_cv_model)
library(Metrics)
x_test <- model.matrix(test_set$Profit~. , data = test_set)[, -1]
lasso_pred <- predict(lasso_cv_model, s = best_lambda, newx = x_test)
test_mse <- mse(test_set$Profit, lasso_pred)
cat("Test MSE" , test_mse, "\n")
R2(predictions, test_set$Profit)
predictions <- regressor %>% predict(test_set)
RMSE(predictions, test_set$Profit)
R2(predictions, test_set$Profit)
Error_rate= 9534.568/mean(test_set$Profit)
Error_rate
predictions <- regressor %>% predict(test_set)
